package LastPractick;

public class OOP {
}
/*1)Концепция ООП - подразумнивает  упрощение разработки
и использование какой либо системы путем сокрытие деталей реализации
и предоставлении пользователю определенного интерфейса взаимодействия.
P.S.
Существует 3 парадигмы ООП  + абстракция!


2)Инкапсуляция - механизм языка, позволяющий объеденить данные и методы,
работающие с этими данными в единый обьект, и скрыть детали реализации от пользователя.

3)Наследование - Позволяет описать новый класс на основе уже существующего(Родительского),
 при этом свойства и функциональность родительского класса заимствуются новым классом

4)Полиморфизм - Это способность метода вести себя по разному в зависимости от того,
 обьект какого класса вызывает етот метод, тоесть обработки разных типов данных!

 4,5 - 5) Абстракция - использование только тех характеристик обьекта,
 которые с достаточной точностью представляют его в данной системе.

 П.С. для абстракции
 Абстракция - это определенный уровень описания/представления модели чего либо.
ООП базируется на взаимодействии объектов которые описывают модель чего либо.
С помощью ООП можно создать абстракцию чего либо.
Абстракция необходима в крупных проектах.

Класс - это шаблон, по которому в дальнейшем будет создаватся обьект
Обьект - Екземпляр класса
переменная - область памяти, которая хранит какую то информацию или данные для дальнейшей манипуляции с ними
константа - неизменяемое поле*/

